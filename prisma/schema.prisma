// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model Account {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  userId             String @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  phoneNumber String? 
  emailVerified DateTime?
  image         String?
  hasedPassword String?
   gender       String? @default("others")
   age          Int?
   address      String?
  ethnicity   String?
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt
  favroiteIds String[] @db.ObjectId
   accounts      Account[]
  sessions      Session[]
  listing Listing[]
 reservation Reservation[]
  
}
model Listing{
   id      String   @id @default(auto()) @map("_id") @db.ObjectId
locationName String
description String
mainImageSrc String?
imagesSrc String[]
imageSrc1 String?
imageSrc2 String?
imageSrc3 String?
imageSrc4 String?
pinCode String?
state String?
createdAt DateTime @default(now())
  roomCount Int
  bathroomCount Int
  type String? @default("rent")
  paymentInterval String? @default("monthly")
  waterSupply String? @default("24/7")
  electricitySupply String? @default("24/7")
  bathroomType String? @default("private")
  genderType String? @default("any")
  tagLine String?
  isVerified Boolean? @default(false)
  available Boolean? @default(true)
  rating Int? @default(0)

  guestCount Int?
  location String?
  userId String @db.ObjectId
  price Int
  user User @relation(fields: [userId],references: [id],onDelete:Cascade)
   reservation Reservation[]

}
model Reservation{
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
   userId String @db.ObjectId
   listingId String @db.ObjectId
   startDate DateTime?
   endDate DateTime?
   phoneNumber BigInt?
   bookedName String?
   status String? @default("pending")

   totalPrice Int?
   createdAt DateTime @default(now())

  user User @relation(fields: [userId],references: [id],onDelete:Cascade)
  listing Listing  @relation(fields: [listingId],references: [id],onDelete:Cascade)


}

 
  